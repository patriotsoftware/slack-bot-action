name: "slack-bot-action"
description: "Sends custom message to person or channel of your choice"

inputs:
  destination:
    description: "Channel or user that will receive message."
    required: true
  message:
    description: "Message that will be sent."
    required: true
    default: "testing"
  slack-token:
    description: "Slack Token, can be stored as a secret in the repo."
    required: false
  results:
    description: "List of job results to append to the message. New line separated with:  job:result"
    required: false
  github-token:
    description: "GitHub Repository to for getting commit email. Use: secrets.GITHUB_TOKEN "
    required: false
  github-repository:
    description: "GitHub Repository to for getting commit email. Default: github.repository"
    required: false
  github-sha:
    description: "GitHub SHA to for getting commit email. Default: github.sha"
    required: false
  remove-branch-prefix:
    description: "Removes branch /refs/head/ from string instances of /refs/heads. Values: true/false"
    required: false
    default: "true"
  fallback-destination:
    description: "Destination to use if any of the destinations fail."
    required: false
    default: '#alerts-unknown-team'
outputs:
  validate-output:
    description: "Status of message"
    value: ${{ steps.run-slackbot.outputs.validate-output }}

runs:
  using: composite
  steps:
  
      - name: Checkout Code
        uses: actions/checkout@v4

        # the slack github action doesn't support user emails directly
        # use this method to get the user's slack memberid from the email 
        # it uses the github email of the last commit to find this info
      - uses: octokit/request-action@v2.x
        id: get_commit_email
        with:
          route: GET /repos/${{ github.repository }}/commits/${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: get email
        id: test
        uses: patriotsoftware/get-github-email-by-username-action@v1.25
        with:
          github-username: ${{ github.triggering_actor }}
          
      - name: Test Outputs
        shell: bash
        run: |
          echo "!!!!!!!!!!!!!!"
          echo "First ${{ fromJson(steps.get_commit_email.outputs.data).commit.committer.email }}" # doesn't work if change made inline
          echo "Second $(git log -n 1 --pretty=format:%ae)" # gets committer even on push
          echo "Third ${{ steps.test.outputs.email }}"
          echo "!!!!!!!!!!!!!!"

