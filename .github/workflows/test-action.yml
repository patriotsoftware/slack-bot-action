name: Deploy a New SlackBot

on: 
  push:
    branches:
      - "*"
      - "!main"
  workflow_dispatch:

jobs:
  build-test-slackbot:
    name: Build Slackbot
    runs-on: ubuntu-20.04
    env:
      workdir: ./go/src/hello-gopherjs
      basefile: index
    steps:
      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2
        with:
          path: ${{ env.workdir }} # we checkout to a directory that will end up in our GOPATH

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16"

      - name: Build
        working-directory: ${{ env.workdir }}
        run: |
          export GOPATH=${{ github.workspace }}/go
          GO111MODULE=off go get -u github.com/gopherjs/gopherjs
          cd $GOPATH/src/github.com/gopherjs/gopherjs/node-syscall/
          sudo npm install --global node-gyp
          node-gyp rebuild
          mkdir -p ~/.node_libraries/
          cp build/Release/syscall.node ~/.node_libraries/syscall.node
          cd ${{ github.workspace }}/${{ env.workdir }}
          npm install xhr2
          go mod vendor
          export PATH=$PATH:$GOPATH/bin
          GOPHERJS_GOROOT="$(go env GOROOT)" gopherjs build -o ${{ env.basefile }}.js -m

  # trigger-slackbot:
  #   name: Trigger Slackbot
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Update Certs of 3rd Parties # for testing locally
  #       run: |
  #         if [ "$ACT" ]; then
  #           apt update && apt install sudo && apt-get install -y ca-certificates && update-ca-certificates
  #           apt install -y locales-all
  #         fi

      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch

      # - name: Checkout Action
      #   uses: actions/checkout@v2

      
      - uses: octokit/request-action@v2.x
        id: get_commit_email
        with:
          route: GET /repos/patriotsoftware/slack-bot-action/commits/${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Slackbot Channel Test
        id: trigger-slackbot-channeltest
        uses: ${{ env.workdir }}
        with:
          destination: ${{ fromJson(steps.get_commit_email.outputs.data).commit.author.email }}
          message: "A new slackbot update has been triggered."
          slack-token: ${{ secrets.SLACK_TOKEN }}

      # Print out the outputs from the previous step
      - name: Verify Output
        run: |
          if [ -z "${{ steps.trigger-slackbot-channeltest.outputs.validate-output }}" ]; then
            echo "❌ Step did not complete successfully."
            exit 1
          fi
          echo "✅ Action completed"
          echo "${{ steps.trigger-slackbot-channeltest.outputs.validate-output }}"
    